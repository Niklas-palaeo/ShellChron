eval(call("<-", as.name(i), tmp))
}
rm(tmp)
rm(test)
Shell2.1_curve$name <- NULL
Shell2 <- Shell2.1_curve
test <- dfs[which(("Shell2" %in% dfs) && ("B" !%in% dfs)]
test <- dfs[which(("Shell2" %in% dfs) && ("B" %!in% dfs)]
test <- dfs[which(("Shell2" %in% dfs) && ("B" %!in% dfs))]
test <- dfs[which(("Shell2" %in% dfs) && !("B" %in% dfs))]
test <- dfs[which(("Shell2" %in% dfs))]
?grepl
test <- dfs[which(grepl(dfs, "Shell2"))]
grepl(dfs[1], "Shell2")
dfs[1]
grepl(dfs[1], "Shell2", fixed = TRUE)
grepl(dfs[1], "Shell2", fixed = FALSE)
"Shell2" in dfs[1]
"Shell2" %in% dfs[1]
str(dfs[1])
grepl(str(dfs[1]), "Shell2", fixed = TRUE)
grepl(dfs[1], "Shell2", fixed = TRUE)
grepl("Shell2.1", "Shell2", fixed = TRUE)
grepl("Shell2.1", "Shell2")
grep("Shell2.1", "Shell2")
grep("Shell21", "Shell2")
grepl("Shell21", "Shell2", fixed = TRUE)
strings <- c("abcd", "cdab", "cabd", "c abd")
grep("ab", strings)
grep("Shell2", dfs)
grepl("Shell2", dfs)
dfs[which(grepl("Shell2", dfs) && !grepl("B", dfs))]
grepl("B", dfs)
dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))]
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]
max(Shell2$depth)
View(Shell2.2_curve1)
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth)
Shell2 <- cbind(Shell2, tmp)
}
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth)
Shell2 <- rbind(Shell2, tmp)
}
View(Shell2)
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, matrix(rep(0, ncol(Shell2) * 3), nrow = 3), tmp) # Add zeroes in between different dataframes as markers for breaks
}
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
matrix(rep(0, ncol(Shell2) * 3), nrow = 3)
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, matrix(rep(0, ncol(Shell2) * 3), nrow = 3), tmp) # Add zeroes in between different dataframes as markers for breaks
}
?cbind
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, data.frame(rep(0, ncol(Shell2) * 3), nrow = 3), tmp) # Add zeroes in between different dataframes as markers for breaks
}
data.frame(rep(0, ncol(Shell2) * 3), nrow = 3)
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, as.data.frame(matrix(rep(0, ncol(Shell2) * 3)), nrow = 3), tmp) # Add zeroes in between different dataframes as markers for breaks
}
as.data.frame(matrix(rep(0, ncol(Shell2) * 3))
as.data.frame(matrix(rep(0, ncol(Shell2) * 3)), nrow = 3)
?data.frame
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2) * 3), nrow = 3)
colnames(marker) <- names(Shell2)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
View(Shell2)
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
eval(call("<-", as.name(name), readWorkbook(wb, sheet = which(sheets == i)))) # Assign sheet content to dataframe with sheetname
}
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)] # List all dataframes
for(i in dfs){ # Loop through dataframes
tmp <- get(i) # Temporarily store data
tmp$shtnm <- rep(i, nrow(tmp)) # Add column with names
tmp$time <- NULL
eval(call("<-", as.name(i), tmp)) # Restore original name of df
}
# Merge dfs from shell 2
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2) * 3), nrow = 3)
colnames(marker) <- names(Shell2)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
View(Shell2)
# Merge dfs from second measurement through shell 2
Shell2B <- get(dfs[which(grepl("Shell2", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2B) * 3), nrow = 3)
colnames(marker) <- names(Shell2B)
tmp$depth <- tmp$depth + max(Shell2B$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
View(Shell2.1_curve)
# Merge dfs from first measurement through shell 2
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2) * 3), nrow = 3)
colnames(marker) <- names(Shell2)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through shell 2
Shell2B <- get(dfs[which(grepl("Shell2", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2B) * 3), nrow = 3)
colnames(marker) <- names(Shell2B)
tmp$depth <- tmp$depth + max(Shell2B$depth) # Create continuous depth scale
Shell2B <- rbind(Shell2B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through shell 3
Shell3 <- get(dfs[which(grepl("Shell3", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3) * 3), nrow = 3)
colnames(marker) <- names(Shell3)
tmp$depth <- tmp$depth + max(Shell3$depth) # Create continuous depth scale
Shell3 <- rbind(Shell3, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through shell 3
Shell3B <- get(dfs[which(grepl("Shell3", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3B) * 3), nrow = 3)
colnames(marker) <- names(Shell3B)
tmp$depth <- tmp$depth + max(Shell3B$depth) # Create continuous depth scale
Shell3B <- rbind(Shell3B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through shell 4
Shell4 <- get(dfs[which(grepl("Shell4", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell4", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell4 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell4) * 3), nrow = 3)
colnames(marker) <- names(Shell4)
tmp$depth <- tmp$depth + max(Shell4$depth) # Create continuous depth scale
Shell4 <- rbind(Shell4, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through shell 4
Shell4B <- get(dfs[which(grepl("Shell4", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell4", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell4 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell4B) * 3), nrow = 3)
colnames(marker) <- names(Shell4B)
tmp$depth <- tmp$depth + max(Shell4B$depth) # Create continuous depth scale
Shell4B <- rbind(Shell4B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
x11(); plot(Shell2[, c(1,2)])
save.image("E:/Dropbox/Research/postdoc/Side projects/Bivalve photosymbiosis and gigantism/Pectinids_Lukas/2020-09 data/20201019_merged_samples.RData")
dfs
?ls()
rm(list = dfs)
rm(marker)
# Convert sheets to dataframes
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
eval(call("<-", as.name(name), readWorkbook(wb, sheet = which(sheets == i)))) # Assign sheet content to dataframe with sheetname
}
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)] # List all dataframes
for(i in dfs){ # Loop through dataframes
tmp <- get(i) # Temporarily store data
tmp$shtnm <- rep(i, nrow(tmp)) # Add column with names
tmp$time <- NULL
eval(call("<-", as.name(i), tmp)) # Restore original name of df
}
# Merge dfs from first measurement through shell 2
Shell2 <- get(dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2) * 3), nrow = 3)
colnames(marker) <- names(Shell2)
tmp$depth <- tmp$depth + max(Shell2$depth) # Create continuous depth scale
Shell2 <- rbind(Shell2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
dfs
rm(list = sheets)
warnings()
rm("Shell2.1_curve")
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
rm(name)
}
for(i in sheets){ # Loop through sheets
print(i)
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
rm(name)
}
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
print(name)
rm(name)
}
for(i in sheets[-1]){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
print(name)
rm(name)
}
name <- list()
for(i in sheets[-1]){ # Loop through sheets
name <- append(name, paste(strsplit(i, "#")[[1]][1])) # Extract sheet name without the "#XXX"-part
}
rm(list = name)
name <- vector()
for(i in sheets[-1]){ # Loop through sheets
name <- c(name, paste(strsplit(i, "#")[[1]][1])) # Extract sheet name without the "#XXX"-part
}
rm(list = name)
# Convert sheets to dataframes
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
eval(call("<-", as.name(name), readWorkbook(wb, sheet = which(sheets == i)))) # Assign sheet content to dataframe with sheetname
}
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)] # List all dataframes
for(i in dfs){ # Loop through dataframes
tmp <- get(i) # Temporarily store data
tmp$shtnm <- rep(i, nrow(tmp)) # Add column with names
tmp$time <- NULL
eval(call("<-", as.name(i), tmp)) # Restore original name of df
}
rm(list=ls())
setwd("E:/Dropbox/Research/postdoc/Side projects/Bivalve photosymbiosis and gigantism/Pectinids_Lukas/2020-09 data")
wb <- loadWorkbook("20200929_SEQ308_Jacobsschelp_NdW_LR_LinearCorr_profiles.xlsx") # Import data
sheets <- sheets(wb) # Get sheet names
# Convert sheets to dataframes
for(i in sheets){ # Loop through sheets
name <- paste(strsplit(i, "#")[[1]][1]) # Extract sheet name without the "#XXX"-part
eval(call("<-", as.name(name), readWorkbook(wb, sheet = which(sheets == i)))) # Assign sheet content to dataframe with sheetname
}
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)] # List all dataframes
for(i in dfs){ # Loop through dataframes
tmp <- get(i) # Temporarily store data
tmp$shtnm <- rep(i, nrow(tmp)) # Add column with names
tmp$time <- NULL
eval(call("<-", as.name(i), tmp)) # Restore original name of df
}
# Merge dfs from first measurement through Shell2.1
Shell2.1 <- get(dfs[which(grepl("Shell2.1", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2.1", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2.1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2.1) * 3), nrow = 3)
colnames(marker) <- names(Shell2.1)
tmp$depth <- tmp$depth + max(Shell2.1$depth) # Create continuous depth scale
Shell2.1 <- rbind(Shell2.1, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through Shell2.1
Shell2.1B <- get(dfs[which(grepl("Shell2.1", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2.1", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2.1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2.1B) * 3), nrow = 3)
colnames(marker) <- names(Shell2.1B)
tmp$depth <- tmp$depth + max(Shell2.1B$depth) # Create continuous depth scale
Shell2.1B <- rbind(Shell2.1B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through Shell2.2
Shell2.2 <- get(dfs[which(grepl("Shell2.2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2.2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2.2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2.2) * 3), nrow = 3)
colnames(marker) <- names(Shell2.2)
tmp$depth <- tmp$depth + max(Shell2.2$depth) # Create continuous depth scale
Shell2.2 <- rbind(Shell2.2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through Shell2.2
Shell2.2B <- get(dfs[which(grepl("Shell2.2", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell2.2", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell2.2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell2.2B) * 3), nrow = 3)
colnames(marker) <- names(Shell2.2B)
tmp$depth <- tmp$depth + max(Shell2.2B$depth) # Create continuous depth scale
Shell2.2B <- rbind(Shell2.2B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
# Merge dfs from first measurement through Shell3_1
Shell3_1 <- get(dfs[which(grepl("Shell3_1", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_1", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_1) * 3), nrow = 3)
colnames(marker) <- names(Shell3_1)
tmp$depth <- tmp$depth + max(Shell3_1$depth) # Create continuous depth scale
Shell3_1 <- rbind(Shell3_1, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through Shell3_1
Shell3_1B <- get(dfs[which(grepl("Shell3_1", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_1", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_1B) * 3), nrow = 3)
colnames(marker) <- names(Shell3_1B)
tmp$depth <- tmp$depth + max(Shell3_1B$depth) # Create continuous depth scale
Shell3_1B <- rbind(Shell3_1B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through Shell3_1
Shell3_1 <- get(dfs[which(grepl("Shell3_1", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_1", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_1) * 3), nrow = 3)
colnames(marker) <- names(Shell3_1)
tmp$depth <- tmp$depth + max(Shell3_1$depth) # Create continuous depth scale
Shell3_1 <- rbind(Shell3_1, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
Shell3_1B <- get(dfs[which(grepl("Shell3_1", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_1", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_1 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_1B) * 3), nrow = 3)
colnames(marker) <- names(Shell3_1B)
tmp$depth <- tmp$depth + max(Shell3_1B$depth) # Create continuous depth scale
Shell3_1B <- rbind(Shell3_1B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through Shell3_2
Shell3_2 <- get(dfs[which(grepl("Shell3_2", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_2", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_2) * 3), nrow = 3)
colnames(marker) <- names(Shell3_2)
tmp$depth <- tmp$depth + max(Shell3_2$depth) # Create continuous depth scale
Shell3_2 <- rbind(Shell3_2, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through Shell3_2
Shell3_2B <- get(dfs[which(grepl("Shell3_2", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell3_2", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell3_2 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell3_2B) * 3), nrow = 3)
colnames(marker) <- names(Shell3_2B)
tmp$depth <- tmp$depth + max(Shell3_2B$depth) # Create continuous depth scale
Shell3_2B <- rbind(Shell3_2B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from first measurement through Shell4
Shell4 <- get(dfs[which(grepl("Shell4", dfs) & !grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell4", dfs) & !grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell4 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell4) * 3), nrow = 3)
colnames(marker) <- names(Shell4)
tmp$depth <- tmp$depth + max(Shell4$depth) # Create continuous depth scale
Shell4 <- rbind(Shell4, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
# Merge dfs from second measurement through Shell4
Shell4B <- get(dfs[which(grepl("Shell4", dfs) & grepl("B", dfs))][1])
for(name in dfs[which(grepl("Shell4", dfs) & grepl("B", dfs))][-1]){ # Filter out dfs belonging to the first measurement of Shell4 (no "B" line dataframes)
tmp <- get(name)
marker <- matrix(rep(0, ncol(Shell4B) * 3), nrow = 3)
colnames(marker) <- names(Shell4B)
tmp$depth <- tmp$depth + max(Shell4B$depth) # Create continuous depth scale
Shell4B <- rbind(Shell4B, marker, tmp) # Add zeroes in between different dataframes as markers for breaks
}
name <- vector()
for(i in sheets[-1]){ # Loop through sheets
name <- c(name, paste(strsplit(i, "#")[[1]][1])) # Extract sheet name without the "#XXX"-part
}
rm(list = name) # Remove raw dataframes to safe space
rm(tmp)
rm(marker)
x11(); plot(Shell2.1[, C(1, 6)], type = "l")
x11(); plot(Shell2.1[, c(1, 6)], type = "l")
x11(); plot(Shell2.1B[, c(1, 6)], type = "l")
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)]
dfs
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)]
for(df in dfs){
write.csv(get(df), paste(df, ".csv", sep = ""))
}
View(Shell2.1B)
for(df in dfs){
tmp <- get(df)
tmp$depth <- tmp$depth * 1000 # Convert depth to micrometers
write.csv(tmp, paste(df, ".csv", sep = ""))
rm(tmp)
}
for(df in dfs){
tmp <- get(df)
tmp$depth <- tmp$depth * 1000 # Convert depth to micrometers
write.csv(tmp, paste(df, ".csv", sep = ""))
eval(call("<-", as.name(df), tmp)) # Restore original name of df
rm(tmp)
}
View(Shell2.1)
require(zoo)
?rollmean
test <- diff(Shell2.1)
test <- diff(Shell2.1$depth)
test[1:40]
x11();hist(test)
mean(diff(Shell2.1$depth))
median(diff(Shell2.1$depth))
sd(diff(Shell2.1$depth))
sd(diff(Shell2.1$depth))/sqrt(length(Shell2.1$depth))
SR_average <- mean(diff(Shell2.1$depth)) # average
SR_median <- median(diff(Shell2.1$depth)) # median
SR_sd <- sd(diff(Shell2.1$depth)) # stdev
SD_se <- sd(diff(Shell2.1$depth))/sqrt(length(Shell2.1$depth)) # sterr
SR_se <- sd(diff(Shell2.1$depth))/sqrt(length(Shell2.1$depth)) # sterr
qt(0.95, length(Shell2.1$depth) - 1)
SR_95CL <- SR_se * qt(0.95, length(Shell2.1$depth) - 1)
x11(); hist(diff(Shell2.1$depth)) # Plot in histogram
SR_average <- mean(diff(Shell2.1$depth)) # average
SR_median <- median(diff(Shell2.1$depth)) # median
SR_sd <- sd(diff(Shell2.1$depth)) # stdev
SR_se <- sd(diff(Shell2.1$depth))/sqrt(length(Shell2.1$depth)) # sterr
SR_95CL <- SR_se * qt(0.95, length(Shell2.1$depth) - 1) # 95% conf. level
x11(); hist(diff(Shell3.1$depth)) # Plot in histogram
SR_average <- mean(diff(Shell3.1$depth)) # average
SR_median <- median(diff(Shell3.1$depth)) # median
SR_sd <- sd(diff(Shell3.1$depth)) # stdev
SR_se <- sd(diff(Shell3.1$depth))/sqrt(length(Shell3.1$depth)) # sterr
SR_95CL <- SR_se * qt(0.95, length(Shell3.1$depth) - 1) # 95% conf. level
x11(); hist(diff(Shell3_1$depth)) # Plot in histogram
SR_average <- mean(diff(Shell3_1$depth)) # average
SR_median <- median(diff(Shell3_1$depth)) # median
SR_sd <- sd(diff(Shell3_1$depth)) # stdev
SR_se <- sd(diff(Shell3_1$depth))/sqrt(length(Shell3_1$depth)) # sterr
SR_95CL <- SR_se * qt(0.95, length(Shell3_1$depth) - 1) # 95% conf. level
SR10um <- 10/SR
SR <- 0.4365
SR10um <- 10/SR
SR10um <- round(10 / SR, 1)
SR10um <- round(10 / SR, 0)
SR20um <- round(20 / SR, 0) # Calculate size of sampling window for 20 micrometer
SR50um <- round(50 / SR, 0) # Calculate size of sampling window for 50 micrometer
SR100um <- round(100 / SR, 0) # Calculate size of sampling window for 100 micrometer
SRvec <- c(SR10um, SR20um, SR50um, SR100um)
?apply
dfs
Shell2.1_SR10um <- apply(Shell2.1, 2, rollmean())
Shell2.1_SR10um <- apply(Shell2.1, 2, rollmean(SRvec[1]))
Shell2.1_SR10um <- apply(Shell2.1, 2, rollmean(), k = SRvec[1])
Shell2.1_SR10um <- rollmean(Shell2.1, SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(as.matrix(Shell2.1), SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(Shell2.1[, -c(1, 3)], SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(Shell2.1[,2], SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(Shell2.1[,2], SRvec[1], fill = NA)
x11();plot(Shell2.1_SR10um)
Shell2.1_SR10um <- rollmean(Shell2.1[, -c(1, 3)], SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = na.pad)
Shell2.1_SR10um <- rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = NA)
View(Shell2.1_SR10um)
for(SR in SRvec){
eval(call("<-", as.name(paste("Shell2.1", SR, sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = NA))))
}
SRvec <- c("SR10um" = SR10um, "SR20um" = SR20um, "SR50um" = SR50um, "SR100um" = SR100um)
names(SRvec)
SRvec[1]
for(SR in SRvec){
eval(call("<-", as.name(paste("Shell2.1", name(SR), sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = NA))))
}
name(SRvec[1])
names(SRvec[1])
for(SR in SRvec){
eval(call("<-", as.name(paste("Shell2.1", names(SR), sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = NA))))
}
View(Shell2.1_SR10um)
for(SR in SRvec){
print(SR)
print(names(SR))
eval(call("<-", as.name(paste("Shell2.1", names(SR), sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[1], fill = NA))))
}
View(Shell2.1_23)
View(Shell2.1_229)
View(Shell2.1_23)
for(i in 1:length(SRvec)){
print(SR[i])
print(names(SR[i]))
eval(call("<-", as.name(paste("Shell2.1", names(SR[i]), sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SR[i], fill = NA))))
}
rm(Shell2.1_)
rm(Shell2.1_SR10um)
rm(Shell2.1_23)
rm(Shell2.1_46)
rm(Shell2.1_115)
rm(Shell2.1_229)
for(i in 1:length(SRvec)){
eval(call("<-", as.name(paste("Shell2.1", names(SRvec[i]), sep = "_")), cbind(Shell2.1$depth, rollmean(Shell2.1[, -c(1, 3, 8)], SRvec[i], fill = NA))))
}
View(Shell2.1_SR100um)
x11(); plot(Shell2.1_SR100um[, 2])
x11(); plot(Shell2.1_SR10um[, 2])
dfs
# Apply all sampling windows and export data
for(df in dfs){
tmp <- get(df) # Isolate data frame
for(i in 1:length(SRvec)){
tmp_SR <- cbind(tmp$depth, rollmean(tmp[, -c(1, 3, 8)], SRvec[i], fill = NA)) # Isolate sampling resolution and apply rolling mean
write.csv(tmp_SR, paste(df, "_", names(SRvec[i]), ".csv", sep = "")) # write away result into file
eval(call("<-", as.name(paste(df, names(SRvec[i]), sep = "_")), tmp_SR)) # write away result into object for further processing
rm(tmp_SR) # Remove temporary dataframe
}
rm(tmp) # Remove temporary dataframe
}
rm(wb)
save.image("E:/Dropbox/Research/postdoc/Side projects/Bivalve photosymbiosis and gigantism/Pectinids_Lukas/2020-09 data/20201019.RData")
load("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Gagan_coral_new/20201019.RData")
require(ShellChron)
