Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
i = 12
Dt <- vector()
D18O <- vector()
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
i = 11
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
i = 10
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
i=12
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
Dt <- vector()
D18O <- vector()
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
test <- D18O
test2 <- Dt
i = 11
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)]
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt <- vector()
D18O <- vector()
for(i in 12:3){
print(i)
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod <- as.vector(Omod[!is.na(Omod)])
JDmod <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod <- as.vector(JDmod[!is.na(JDmod)])
dt <- JDmod - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt[which(abs(dt) > 182.5)] <- 182.5 - dt[which(abs(dt) > 182.5)] # If difference is more than 1/2 year, take the other half
if(i < 12){
dt <- c(dt, rep(NA, length(Dt[, 1]) - length(dt))) # Fill up difference in length with NA's before concatenation
}
Dt <- cbind(Dt, dt)
colnames(Dt)[length(Dt[1, ])] <- paste("Case1_HR_", i, sep = "")
dO <- Omod - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
if(i < 12){
dO <- c(dO, rep(NA, length(D18O[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O <- cbind(D18O, dO)
colnames(D18O)[length(D18O[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
write.csv(D18O, "D18O_Judd_et_al.csv")
write.csv(Dt, "Dt_Judd_et_al.csv")
x11(); hist(D18O[,1])
x11(); hist(D18O[,1], bin = 0.05)
?hist
x11(); hist(D18O[,1], breaks = 100)
x11(); hist(D18O[,10], breaks = 100)
x11(); hist(Dt[,1], breaks = 100)
x11(); hist(Dt[,10], breaks = 100)
View(dat)
View(JD_real)
View(dat)
i = 12
rm(list=ls())
i = 12
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18Omod)
View(d18Odat)
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
test <- JDmod_ShellChron %% 365
test
JDmod_ShellChron
View(dat)
rm(list=ls())
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt_Judd <- vector()
D18O_Judd <- vector()
Dt_ShellChron <- vector()
D18O_ShellChron <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18O_Juddc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
colnames(Dt_Judd)[length(Dt_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_Judd[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_Judd <- cbind(D18O_Judd, dO)
colnames(D18O_Judd)[length(D18O_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron <- (JDmod_ShellChron %% 365) - JDreal$t_HR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] <- 182.5 - dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] # If difference is more than 1/2 year, take the other half
dO_ShellChron <- Omod_ShellChron - dat$d18Oc
if(i < 12){
dt_ShellChron <- c(dt_ShellChron, rep(NA, length(Dt_ShellChron[, 1]) - length(dt_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron <- cbind(Dt_ShellChron, dt_ShellChron)
colnames(Dt_ShellChron)[length(Dt_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_ShellChron[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_ShellChron <- cbind(D18O_ShellChron, dO)
colnames(D18O_ShellChron)[length(D18O_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
i = 12
rm(list=ls())
i = 12
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18O_Juddc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt_Judd <- vector()
D18O_Judd <- vector()
Dt_ShellChron <- vector()
D18O_ShellChron <- vector()
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18O_Juddc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
View(Dt_Judd)
colnames(Dt_Judd)[length(Dt_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
View(Dt_Judd)
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_Judd[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_Judd <- cbind(D18O_Judd, dO)
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18O_Juddc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
rm(list=ls())
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt_Judd <- vector()
D18O_Judd <- vector()
Dt_ShellChron <- vector()
D18O_ShellChron <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
colnames(Dt_Judd)[length(Dt_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_Judd[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_Judd <- cbind(D18O_Judd, dO)
colnames(D18O_Judd)[length(D18O_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron <- (JDmod_ShellChron %% 365) - JDreal$t_HR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] <- 182.5 - dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] # If difference is more than 1/2 year, take the other half
dO_ShellChron <- Omod_ShellChron - dat$d18Oc
if(i < 12){
dt_ShellChron <- c(dt_ShellChron, rep(NA, length(Dt_ShellChron[, 1]) - length(dt_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron <- cbind(Dt_ShellChron, dt_ShellChron)
colnames(Dt_ShellChron)[length(Dt_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_ShellChron[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_ShellChron <- cbind(D18O_ShellChron, dO)
colnames(D18O_ShellChron)[length(D18O_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt_Judd <- vector()
D18O_Judd <- vector()
Dt_ShellChron <- vector()
D18O_ShellChron <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
colnames(Dt_Judd)[length(Dt_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_Judd[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_Judd <- cbind(D18O_Judd, dO)
colnames(D18O_Judd)[length(D18O_Judd[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron <- (JDmod_ShellChron %% 365) - JD_real$t_HR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] <- 182.5 - dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] # If difference is more than 1/2 year, take the other half
dO_ShellChron <- Omod_ShellChron - dat$d18Oc
if(i < 12){
dt_ShellChron <- c(dt_ShellChron, rep(NA, length(Dt_ShellChron[, 1]) - length(dt_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron <- cbind(Dt_ShellChron, dt_ShellChron)
colnames(Dt_ShellChron)[length(Dt_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_ShellChron[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_ShellChron <- cbind(D18O_ShellChron, dO)
colnames(D18O_ShellChron)[length(D18O_ShellChron[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
write.csv(D18O_Judd, "D18O_Judd_et_al.csv")
write.csv(Dt_Judd, "Dt_Judd_et_al.csv")
write.csv(D18O_ShellChron, "D18O_ShellChron.csv")
write.csv(Dt_ShellChron, "Dt_ShellChron.csv")
colMeans(Dt_Judd)
colMeans(Dt_Judd, na.rm = TRUE)
colMeans(Dt_ShellChron, na.rm = TRUE)
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
# Loop through HR files and get stats
Dt_Judd <- vector()
D18O_Judd <- vector()
Dt_ShellChron <- vector()
D18O_ShellChron <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_LR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_LR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Calculate diffences between model and real data
dt_Judd <- JDmod_Judd - JD_real$t_LR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd[which(abs(dt_Judd) > 182.5)] <- 182.5 - dt_Judd[which(abs(dt_Judd) > 182.5)] # If difference is more than 1/2 year, take the other half
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd <- c(dt_Judd, rep(NA, length(Dt_Judd[, 1]) - length(dt_Judd))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd <- cbind(Dt_Judd, dt_Judd)
colnames(Dt_Judd)[length(Dt_Judd[1, ])] <- paste("Case1_LR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_Judd[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_Judd <- cbind(D18O_Judd, dO)
colnames(D18O_Judd)[length(D18O_Judd[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_LR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_LR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron <- (JDmod_ShellChron %% 365) - JD_real$t_LR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] <- 182.5 - dt_ShellChron[which(abs(dt_ShellChron) > 182.5)] # If difference is more than 1/2 year, take the other half
dO_ShellChron <- Omod_ShellChron - dat$d18Oc
if(i < 12){
dt_ShellChron <- c(dt_ShellChron, rep(NA, length(Dt_ShellChron[, 1]) - length(dt_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron <- cbind(Dt_ShellChron, dt_ShellChron)
colnames(Dt_ShellChron)[length(Dt_ShellChron[1, ])] <- paste("Case1_LR_", i, sep = "")
if(i < 12){
dO <- c(dO, rep(NA, length(D18O_ShellChron[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
D18O_ShellChron <- cbind(D18O_ShellChron, dO)
colnames(D18O_ShellChron)[length(D18O_ShellChron[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/Performance time") # return to top level
}
write.csv(D18O_Judd, "D18O_Judd_et_al_LR.csv")
write.csv(Dt_Judd, "Dt_Judd_et_al_LR.csv")
write.csv(D18O_ShellChron, "D18O_ShellChron_LR.csv")
write.csv(Dt_ShellChron, "Dt_ShellChron_LR.csv")
colMeans(Dt_ShellChron, na.rm = TRUE)
colMeans(Dt_Judd, na.rm = TRUE)
