if(length(which(diff(YM) < 5)) > 0){
YM <- YM[-which(diff(YM) < 5)] # Remove very short years
}
x <- rep(0, length(JDmod_Judd))
for(y in YM){
x[(y + 1):length(x)] <- x[(y + 1):length(x)] + 1
}
JDmod_Judd_cum <- JDmod_Judd + x * 365
# Calculate diffences between model and real data
dt_Judd_LR <- JDmod_Judd - JD_real$t_LR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd_LR[which(abs(dt_Judd_LR) > 182.5)] <- 182.5 - dt_Judd_LR[which(abs(dt_Judd_LR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_Judd_LR_cum <- JDmod_Judd_cum - JD_real_cum$t_LR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd_LR <- c(dt_Judd_LR, rep(NA, length(Dt_Judd_LR[, 1]) - length(dt_Judd_LR))) # Fill up difference in length with NA's before concatenation
dt_Judd_LR_cum <- c(dt_Judd_LR_cum, rep(NA, length(Dt_Judd_LR_cum[, 1]) - length(dt_Judd_LR_cum))) # Fill up difference in length with NA's before concatenation
dO <- c(dO, rep(NA, length(D18O_Judd_LR[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd_LR <- cbind(Dt_Judd_LR, dt_Judd_LR)
Dt_Judd_LR_cum <- cbind(Dt_Judd_LR_cum, dt_Judd_LR_cum)
D18O_Judd_LR <- cbind(D18O_Judd_LR, dO)
colnames(Dt_Judd_LR)[length(Dt_Judd_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(Dt_Judd_LR_cum)[length(Dt_Judd_LR_cum[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(D18O_Judd_LR)[length(D18O_Judd_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_LR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_LR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron_LR <- (JDmod_ShellChron %% 365) - JD_real$t_LR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron_LR[which(abs(dt_ShellChron_LR) > 182.5)] <- 182.5 - dt_ShellChron_LR[which(abs(dt_ShellChron_LR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_ShellChron_LR_cum <- JDmod_ShellChron - JD_real_cum$t_LR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dO_ShellChron <- Omod_ShellChron - dat$d18Oc # Calculate d18Oc difference between model and data
if(i < 12){
dt_ShellChron_LR <- c(dt_ShellChron_LR, rep(NA, length(Dt_ShellChron_LR[, 1]) - length(dt_ShellChron_LR))) # Fill up difference in length with NA's before concatenation
dt_ShellChron_LR_cum <- c(dt_ShellChron_LR_cum, rep(NA, length(Dt_ShellChron_LR_cum[, 1]) - length(dt_ShellChron_LR_cum))) # Fill up difference in length with NA's before concatenation
dO_ShellChron <- c(dO_ShellChron, rep(NA, length(D18O_ShellChron_LR[, 1]) - length(dO_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron_LR <- cbind(Dt_ShellChron_LR, dt_ShellChron_LR)
Dt_ShellChron_LR_cum <- cbind(Dt_ShellChron_LR_cum, dt_ShellChron_LR_cum)
D18O_ShellChron_LR <- cbind(D18O_ShellChron_LR, dO)
colnames(Dt_ShellChron_LR)[length(Dt_ShellChron_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(Dt_ShellChron_LR_cum)[length(Dt_ShellChron_LR_cum[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(D18O_ShellChron_LR)[length(D18O_ShellChron_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
}
means <- data.frame(years = seq(12, 3, -1))
means$Judd_LR <- colMeans(abs(Dt_Judd_LR), na.rm = TRUE)
means$Judd_LR_cum <- colMeans(abs(Dt_Judd_LR_cum), na.rm = TRUE)
means$ShellChron_LR <- colMeans(abs(Dt_ShellChron_LR), na.rm = TRUE)
means$ShellChron_LR_cum <- colMeans(abs(Dt_ShellChron_LR_cum), na.rm = TRUE)
means$Judd_HR <- colMeans(abs(Dt_Judd_HR), na.rm = TRUE)
means$Judd_HR_cum <- colMeans(abs(Dt_Judd_HR_cum), na.rm = TRUE)
means$ShellChron_HR <- colMeans(abs(Dt_ShellChron_HR), na.rm = TRUE)
means$ShellChron_HR_cum <- colMeans(abs(Dt_ShellChron_HR_cum), na.rm = TRUE)
save.image("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time/20201105_generous.RData")
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
JD_real_cum <- (t_real + 0.25) * 365
# Loop through HR files and get stats
Dt_Judd_LR <- vector()
Dt_Judd_LR_cum <- vector()
D18O_Judd_LR <- vector()
Dt_ShellChron_LR <- vector()
Dt_ShellChron_LR_cum <- vector()
D18O_ShellChron_LR <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_LR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_LR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Create cumulative age from Judd et al. data
YM <- which(diff(JDmod_Judd) < -1) # Find year transitions, skip "years" in the model smaller than 1/2 year
x <- rep(0, length(JDmod_Judd))
for(y in YM){
x[(y + 1):length(x)] <- x[(y + 1):length(x)] + 1
}
JDmod_Judd_cum <- JDmod_Judd + x * 365
# Calculate diffences between model and real data
dt_Judd_LR <- JDmod_Judd - JD_real$t_LR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd_LR[which(abs(dt_Judd_LR) > 182.5)] <- 182.5 - dt_Judd_LR[which(abs(dt_Judd_LR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_Judd_LR_cum <- JDmod_Judd_cum - JD_real_cum$t_LR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd_LR <- c(dt_Judd_LR, rep(NA, length(Dt_Judd_LR[, 1]) - length(dt_Judd_LR))) # Fill up difference in length with NA's before concatenation
dt_Judd_LR_cum <- c(dt_Judd_LR_cum, rep(NA, length(Dt_Judd_LR_cum[, 1]) - length(dt_Judd_LR_cum))) # Fill up difference in length with NA's before concatenation
dO <- c(dO, rep(NA, length(D18O_Judd_LR[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd_LR <- cbind(Dt_Judd_LR, dt_Judd_LR)
Dt_Judd_LR_cum <- cbind(Dt_Judd_LR_cum, dt_Judd_LR_cum)
D18O_Judd_LR <- cbind(D18O_Judd_LR, dO)
colnames(Dt_Judd_LR)[length(Dt_Judd_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(Dt_Judd_LR_cum)[length(Dt_Judd_LR_cum[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(D18O_Judd_LR)[length(D18O_Judd_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_LR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_LR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron_LR <- (JDmod_ShellChron %% 365) - JD_real$t_LR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron_LR[which(abs(dt_ShellChron_LR) > 182.5)] <- 182.5 - dt_ShellChron_LR[which(abs(dt_ShellChron_LR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_ShellChron_LR_cum <- JDmod_ShellChron - JD_real_cum$t_LR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dO_ShellChron <- Omod_ShellChron - dat$d18Oc # Calculate d18Oc difference between model and data
if(i < 12){
dt_ShellChron_LR <- c(dt_ShellChron_LR, rep(NA, length(Dt_ShellChron_LR[, 1]) - length(dt_ShellChron_LR))) # Fill up difference in length with NA's before concatenation
dt_ShellChron_LR_cum <- c(dt_ShellChron_LR_cum, rep(NA, length(Dt_ShellChron_LR_cum[, 1]) - length(dt_ShellChron_LR_cum))) # Fill up difference in length with NA's before concatenation
dO_ShellChron <- c(dO_ShellChron, rep(NA, length(D18O_ShellChron_LR[, 1]) - length(dO_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron_LR <- cbind(Dt_ShellChron_LR, dt_ShellChron_LR)
Dt_ShellChron_LR_cum <- cbind(Dt_ShellChron_LR_cum, dt_ShellChron_LR_cum)
D18O_ShellChron_LR <- cbind(D18O_ShellChron_LR, dO)
colnames(Dt_ShellChron_LR)[length(Dt_ShellChron_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(Dt_ShellChron_LR_cum)[length(Dt_ShellChron_LR_cum[1, ])] <- paste("Case1_LR_", i, sep = "")
colnames(D18O_ShellChron_LR)[length(D18O_ShellChron_LR[1, ])] <- paste("Case1_LR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
}
# Calculate accuracy of Judd et al. (2018) model
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time")
t_real <- as.data.frame(read.csv("Case1_Realtime.csv", header = TRUE)) # Import real timing data
JD_real <- ((t_real + 0.25) * 365) %% 365 # Correct for phase lag in data and convert to julian day
JD_real_cum <- (t_real + 0.25) * 365
# Loop through HR files and get stats
Dt_Judd_HR <- vector()
Dt_Judd_HR_cum <- vector()
D18O_Judd_HR <- vector()
Dt_ShellChron_HR <- vector()
Dt_ShellChron_HR_cum <- vector()
D18O_ShellChron_HR <- vector()
for(i in 12:3){
print(i)
# Judd et al. model
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
setwd("Judd_model") # Dive into Judd et al. model results
Omod_Judd <- as.matrix(read.csv("Omodsamp2.csv", header = FALSE)) # Load modelled d18O result
Omod_Judd <- as.vector(Omod_Judd[!is.na(Omod_Judd)])
JDmod_Judd <- as.matrix(read.csv("JDmodsampshift2.csv", header = FALSE)) # Load modelled time result
JDmod_Judd <- as.vector(JDmod_Judd[!is.na(JDmod_Judd)])
# Create cumulative age from Judd et al. data
YM <- which(diff(JDmod_Judd) < -1) # Find year transitions, skip "years" in the model smaller than 1/2 year
x <- rep(0, length(JDmod_Judd))
for(y in YM){
x[(y + 1):length(x)] <- x[(y + 1):length(x)] + 1
}
JDmod_Judd_cum <- JDmod_Judd + x * 365
# Calculate diffences between model and real data
dt_Judd_HR <- JDmod_Judd - JD_real$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dt_Judd_HR[which(abs(dt_Judd_HR) > 182.5)] <- 182.5 - dt_Judd_HR[which(abs(dt_Judd_HR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_Judd_HR_cum <- JDmod_Judd_cum - JD_real_cum$t_HR[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate time difference between model and data
dO <- Omod_Judd - dat$d18Oc[min(which(dat$YEARMARKER == 1)):(max(which(dat$YEARMARKER == 1)) - 1)] # Calculate d18Oc difference between model and data
# Add result to matrix
if(i < 12){
dt_Judd_HR <- c(dt_Judd_HR, rep(NA, length(Dt_Judd_HR[, 1]) - length(dt_Judd_HR))) # Fill up difference in length with NA's before concatenation
dt_Judd_HR_cum <- c(dt_Judd_HR_cum, rep(NA, length(Dt_Judd_HR_cum[, 1]) - length(dt_Judd_HR_cum))) # Fill up difference in length with NA's before concatenation
dO <- c(dO, rep(NA, length(D18O_Judd_HR[, 1]) - length(dO))) # Fill up difference in length with NA's before concatenation
}
Dt_Judd_HR <- cbind(Dt_Judd_HR, dt_Judd_HR)
Dt_Judd_HR_cum <- cbind(Dt_Judd_HR_cum, dt_Judd_HR_cum)
D18O_Judd_HR <- cbind(D18O_Judd_HR, dO)
colnames(Dt_Judd_HR)[length(Dt_Judd_HR[1, ])] <- paste("Case1_HR_", i, sep = "")
colnames(Dt_Judd_HR_cum)[length(Dt_Judd_HR_cum[1, ])] <- paste("Case1_HR_", i, sep = "")
colnames(D18O_Judd_HR)[length(D18O_Judd_HR[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
# ShellChron
# Load data
setwd(paste("Case1_HR_", i, sep = "")) # Dive into simulation results
dat <- as.data.frame(read.csv(paste("Case1_HR_", i, ".csv", sep = ""), header = TRUE))
AMdat <- as.data.frame(read.csv("Age_model_results.csv", header = TRUE)) # Load modelled time result
JDmod_ShellChron <- as.vector(AMdat$mean.day)
d18Odat <- as.data.frame(read.csv("d18O_model_results.csv", header = TRUE)) # Load modelled d18O result
Omod_ShellChron <- as.vector(d18Odat$mean.d18O_mod)
# Calculate diffences between model and real data
dt_ShellChron_HR <- (JDmod_ShellChron %% 365) - JD_real$t_HR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dt_ShellChron_HR[which(abs(dt_ShellChron_HR) > 182.5)] <- 182.5 - dt_ShellChron_HR[which(abs(dt_ShellChron_HR) > 182.5)] # If difference is more than 1/2 year, take the other half
dt_ShellChron_HR_cum <- JDmod_ShellChron - JD_real_cum$t_HR[1:length(JDmod_ShellChron)] # Calculate time difference between model and data
dO_ShellChron <- Omod_ShellChron - dat$d18Oc # Calculate d18Oc difference between model and data
if(i < 12){
dt_ShellChron_HR <- c(dt_ShellChron_HR, rep(NA, length(Dt_ShellChron_HR[, 1]) - length(dt_ShellChron_HR))) # Fill up difference in length with NA's before concatenation
dt_ShellChron_HR_cum <- c(dt_ShellChron_HR_cum, rep(NA, length(Dt_ShellChron_HR_cum[, 1]) - length(dt_ShellChron_HR_cum))) # Fill up difference in length with NA's before concatenation
dO_ShellChron <- c(dO_ShellChron, rep(NA, length(D18O_ShellChron_HR[, 1]) - length(dO_ShellChron))) # Fill up difference in length with NA's before concatenation
}
Dt_ShellChron_HR <- cbind(Dt_ShellChron_HR, dt_ShellChron_HR)
Dt_ShellChron_HR_cum <- cbind(Dt_ShellChron_HR_cum, dt_ShellChron_HR_cum)
D18O_ShellChron_HR <- cbind(D18O_ShellChron_HR, dO)
colnames(Dt_ShellChron_HR)[length(Dt_ShellChron_HR[1, ])] <- paste("Case1_HR_", i, sep = "")
colnames(Dt_ShellChron_HR_cum)[length(Dt_ShellChron_HR_cum[1, ])] <- paste("Case1_HR_", i, sep = "")
colnames(D18O_ShellChron_HR)[length(D18O_ShellChron_HR[1, ])] <- paste("Case1_HR_", i, sep = "")
setwd("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time") # return to top level
}
means <- data.frame(years = seq(12, 3, -1))
means$Judd_LR <- colMeans(abs(Dt_Judd_LR), na.rm = TRUE)
means$Judd_LR_cum <- colMeans(abs(Dt_Judd_LR_cum), na.rm = TRUE)
means$ShellChron_LR <- colMeans(abs(Dt_ShellChron_LR), na.rm = TRUE)
means$ShellChron_LR_cum <- colMeans(abs(Dt_ShellChron_LR_cum), na.rm = TRUE)
means$Judd_HR <- colMeans(abs(Dt_Judd_HR), na.rm = TRUE)
means$Judd_HR_cum <- colMeans(abs(Dt_Judd_HR_cum), na.rm = TRUE)
means$ShellChron_HR <- colMeans(abs(Dt_ShellChron_HR), na.rm = TRUE)
means$ShellChron_HR_cum <- colMeans(abs(Dt_ShellChron_HR_cum), na.rm = TRUE)
save.image("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time/20201105_naive.RData")
load("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time/20201105_naive.RData")
write.csv(D18O_Judd_LR, "D18O_Judd_et_al_LR.csv")
write.csv(Dt_Judd_LR, "Dt_Judd_et_al_LR.csv")
write.csv(Dt_Judd_LR_cum, "Dt_Judd_et_al_cumulative_LR.csv")
write.csv(D18O_ShellChron_LR, "D18O_ShellChron_LR.csv")
write.csv(Dt_ShellChron_LR, "Dt_ShellChron_LR.csv")
write.csv(Dt_ShellChron_LR_cum, "Dt_ShellChron_cumulative_LR.csv")
write.csv(D18O_Judd_HR, "D18O_Judd_et_al_HR.csv")
write.csv(Dt_Judd_HR, "Dt_Judd_et_al_HR.csv")
write.csv(Dt_Judd_HR_cum, "Dt_Judd_et_al_cumulative_HR.csv")
write.csv(D18O_ShellChron_HR, "D18O_ShellChron_HR.csv")
write.csv(Dt_ShellChron_HR, "Dt_ShellChron_HR.csv")
write.csv(Dt_ShellChron_HR_cum, "Dt_ShellChron_cumulative_HR.csv")
?apply
sds <- data.frame(years = seq(12, 3, -1))
sds$Judd_LR <- apply(abs(Dt_Judd_LR), 2, sd, na.rm = TRUE)
View(sds)
colMeans(Dt_Judd_LR)
colMeans(Dt_Judd_LR, na.rm = TRUE)
colMeans(abs(Dt_Judd_LR), na.rm = TRUE)
Dt_Judd_LR[,10]
mean(Dt_Judd_LR[,10], na.rm = TRUE)
mean(abs(Dt_Judd_LR[,10]), na.rm = TRUE)
sd(abs(Dt_Judd_LR[,10]), na.rm = TRUE)
offsets <- data.frame(years = seq(12, 3, -1))
offsets$Judd_LR <- colMeans(abs(Dt_Judd_LR), na.rm = TRUE)
offsets$Judd_LR_cum <- colMeans(abs(Dt_Judd_LR_cum), na.rm = TRUE)
offsets$ShellChron_LR <- colMeans(abs(Dt_ShellChron_LR), na.rm = TRUE)
offsets$ShellChron_LR_cum <- colMeans(abs(Dt_ShellChron_LR_cum), na.rm = TRUE)
offsets$Judd_HR <- colMeans(abs(Dt_Judd_HR), na.rm = TRUE)
offsets$Judd_HR_cum <- colMeans(abs(Dt_Judd_HR_cum), na.rm = TRUE)
offsets$ShellChron_HR <- colMeans(abs(Dt_ShellChron_HR), na.rm = TRUE)
offsets$ShellChron_HR_cum <- colMeans(abs(Dt_ShellChron_HR_cum), na.rm = TRUE)
means <- data.frame(years = seq(12, 3, -1))
means$Judd_LR <- colMeans(Dt_Judd_LR, na.rm = TRUE)
means$Judd_LR_cum <- colMeans(Dt_Judd_LR_cum, na.rm = TRUE)
means$ShellChron_LR <- colMeans(Dt_ShellChron_LR, na.rm = TRUE)
means$ShellChron_LR_cum <- colMeans(Dt_ShellChron_LR_cum, na.rm = TRUE)
means$Judd_HR <- colMeans(Dt_Judd_HR, na.rm = TRUE)
means$Judd_HR_cum <- colMeans(Dt_Judd_HR_cum, na.rm = TRUE)
means$ShellChron_HR <- colMeans(Dt_ShellChron_HR, na.rm = TRUE)
means$ShellChron_HR_cum <- colMeans(Dt_ShellChron_HR_cum, na.rm = TRUE)
sds <- data.frame(years = seq(12, 3, -1))
sds$Judd_LR <- apply(abs(Dt_Judd_LR), 2, sd, na.rm = TRUE)
sds$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, sd, na.rm = TRUE)
sds$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, sd, na.rm = TRUE)
sds$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, sd, na.rm = TRUE)
sds$Judd_HR <- apply(abs(Dt_Judd_HR), 2, sd, na.rm = TRUE)
sds$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, sd, na.rm = TRUE)
sds$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, sd, na.rm = TRUE)
sds$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, sd, na.rm = TRUE)
View(sds)
?qt()
CL95 <- function(x){return(qt(0.05, length(x[-is.na(x)]) * sd(x) / length(x[-is.na(x)]))}
CL95 <- function(x){return(qt(0.05, length(x[-is.na(x)])) * sd(x) / length(x[-is.na(x)]))}
CL95 <- function(x){return(qt(0.05, length(x[-is.na(x)])) * sd(x) / length(x[-is.na(x)]))}
CLs <- data.frame(years = seq(12, 3, -1))
CLs$Judd_LR <- apply(abs(Dt_Judd_LR), 2, CL95)
CLs$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, CL95)
CLs$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, CL95)
CLs$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, CL95)
CLs$Judd_HR <- apply(abs(Dt_Judd_HR), 2, CL95)
CLs$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, CL95)
CLs$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, CL95)
CLs$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, CL95)
View(CLs)
x <- Judd_LR[,1]
x <- Dt_Judd_LR[,1]
length(x[-is.na(x)])
?length
CL95 <- function(x){return(qt(0.05, length(x[!is.na(x)])) * sd(x) / length(x[!is.na(x)]))}
CLs <- data.frame(years = seq(12, 3, -1))
CLs$Judd_LR <- apply(abs(Dt_Judd_LR), 2, CL95)
CLs$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, CL95)
CLs$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, CL95)
CLs$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, CL95)
CLs$Judd_HR <- apply(abs(Dt_Judd_HR), 2, CL95)
CLs$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, CL95)
CLs$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, CL95)
CLs$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, CL95)
View(CLs)
x <- Dt_Judd_LR[,2]
qt(0.05, length(x[!is.na(x)]))
CL95 <- function(x){return(qt(0.05, length(x[!is.na(x)])) * sd(x, na.rm = TRUE) / length(x[!is.na(x)]))}
CLs <- data.frame(years = seq(12, 3, -1))
CLs$Judd_LR <- apply(abs(Dt_Judd_LR), 2, CL95)
CLs$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, CL95)
CLs$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, CL95)
CLs$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, CL95)
CLs$Judd_HR <- apply(abs(Dt_Judd_HR), 2, CL95)
CLs$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, CL95)
CLs$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, CL95)
CLs$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, CL95)
View(CLs)
CL95 <- function(x){return(qt(0.05, length(x[!is.na(x)])) * sd(x, na.rm = TRUE) / sqrt(length(x[!is.na(x)])))}
CLs <- data.frame(years = seq(12, 3, -1))
CLs$Judd_LR <- apply(abs(Dt_Judd_LR), 2, CL95)
CLs$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, CL95)
CLs$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, CL95)
CLs$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, CL95)
CLs$Judd_HR <- apply(abs(Dt_Judd_HR), 2, CL95)
CLs$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, CL95)
CLs$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, CL95)
CLs$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, CL95)
View(CLs)
CL95 <- function(x){return(qt(0.95, length(x[!is.na(x)])) * sd(x, na.rm = TRUE) / sqrt(length(x[!is.na(x)])))}
CLs <- data.frame(years = seq(12, 3, -1))
CLs$Judd_LR <- apply(abs(Dt_Judd_LR), 2, CL95)
CLs$Judd_LR_cum <- apply(abs(Dt_Judd_LR_cum), 2, CL95)
CLs$ShellChron_LR <- apply(abs(Dt_ShellChron_LR), 2, CL95)
CLs$ShellChron_LR_cum <- apply(abs(Dt_ShellChron_LR_cum), 2, CL95)
CLs$Judd_HR <- apply(abs(Dt_Judd_HR), 2, CL95)
CLs$Judd_HR_cum <- apply(abs(Dt_Judd_HR_cum), 2, CL95)
CLs$ShellChron_HR <- apply(abs(Dt_ShellChron_HR), 2, CL95)
CLs$ShellChron_HR_cum <- apply(abs(Dt_ShellChron_HR_cum), 2, CL95)
View(CLs)
View(means)
save.image("E:/Dropbox/Research/Manuscripts/Bivalve age model/tests/Performance time/20201105_naive.RData")
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(col = "light blue")
require(ggplot2)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(col = "light blue")
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue")
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "light red") +
geom_line(aes(years, Judd_HR_cum), col = "light red")
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2")
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2")
x11();plot(accplot)
?geom_errorbar
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "light blue")
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "light blue", width = 0.5)
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5)
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "deepskyblue", width = 0.5)
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5)
plot(accplot)
?scale_x_continuous
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)")
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)") +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)", breaks = c(seq(1, 10, 1), seq(20, 100, 10), seq(200, 1000, 100))) +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
# Create plot
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.3) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.3) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.3) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.3) +
scale_y_log10("offset from actual age (d)", breaks = c(seq(1, 10, 1), seq(20, 100, 10), seq(200, 1000, 100))) +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
pdf("Accuracy_comparison_plot.pdf", height = 5, width = 5)
plot(accplot)
dev.off()
