geom_point(col = "light blue") +
geom_line(col = "light blue") +
geom_point(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_line(aes(years, ShellChron_LR_cum), col = "light blue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "light blue", width = 0.5)
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5)
x11();plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "deepskyblue", width = 0.5)
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5)
plot(accplot)
?scale_x_continuous
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)")
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)") +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.5) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.5) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.5) +
scale_y_log10("offset from actual age (d)", breaks = c(seq(1, 10, 1), seq(20, 100, 10), seq(200, 1000, 100))) +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
# Create plot
accplot <- ggplot(data = offsets, aes(years, Judd_LR_cum)) +
geom_point(col = "deepskyblue") +
geom_line(col = "deepskyblue") +
geom_point(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_line(aes(years, ShellChron_LR_cum), col = "deepskyblue") +
geom_point(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_line(aes(years, Judd_HR_cum), col = "firebrick2") +
geom_point(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_line(aes(years, ShellChron_HR_cum), col = "firebrick2") +
geom_errorbar(aes(x = years, ymin = Judd_LR_cum - CLs$Judd_LR_cum, ymax = Judd_LR_cum + CLs$Judd_LR_cum), col = "deepskyblue", width = 0.3) +
geom_errorbar(aes(x = years, ymin = ShellChron_LR_cum - CLs$ShellChron_LR_cum, ymax = ShellChron_LR_cum + CLs$ShellChron_LR_cum), col = "deepskyblue", width = 0.3) +
geom_errorbar(aes(x = years, ymin = Judd_HR_cum - CLs$Judd_HR_cum, ymax = Judd_HR_cum + CLs$Judd_HR_cum), col = "firebrick2", width = 0.3) +
geom_errorbar(aes(x = years, ymin = ShellChron_HR_cum - CLs$ShellChron_HR_cum, ymax = ShellChron_HR_cum + CLs$ShellChron_HR_cum), col = "firebrick2", width = 0.3) +
scale_y_log10("offset from actual age (d)", breaks = c(seq(1, 10, 1), seq(20, 100, 10), seq(200, 1000, 100))) +
scale_x_continuous("Length of record (yr)", breaks = seq(3, 12, 1))
plot(accplot)
pdf("Accuracy_comparison_plot.pdf", height = 5, width = 5)
plot(accplot)
dev.off()
devtools::document()
devtools::check(args = "--as-cran")
install.packages(c("backports", "cpp11", "dbplyr", "generics", "lme4", "openxlsx", "quantreg", "R6", "testthat", "tinytex", "xfun"))
devtools::install()
devtools::release()
devtools::spell_check()
usethis::use_readme_rmd()
devtools::release()
devtools::check_rhub()
devtools::check_rhub()
devtools::document()
devtools::spell_check()
devtools::build()
devtools::build_manual()
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Users/Convernaum.Niels/AppData/Local/Programs/MiKTeX/miktex/bin/x64",sep=";"))
devtools::build_manual()
devtools::build_manual()
>rhub
?rhub
?r_hub
require(rhub)
install.packages("rhub")
devtools::check_rhub()
devtools::release()
dectools::document()
devtools::document()
devtools::install()
devtools::release()
devtools::check_rhub()
devtools::document()
devtools::install()
devtools::build()
devtools::check_rhub()
list_validated_emails()
devtools::list_validated_emails()
rhub:::email_file()
rhub::validate_email()
devtools::check_rhub()
devtools::document()
?Rd2pdf
Rd2pdf()
install.packages("tinytex")
require(tinytex)
tlmgr_update()
tlmgr_install()
tlmgr_update()
devtools::check_win_release()
devtools::document()
devtools:check_win_release()
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_rhub()
rhub::validate_email()
devtools::document()
devtools::build()
devtools::build_manual()
devtools::build_manual()
devtools::check_win_devel()
devtools::check_win_release()
devtools::check_rhub()
rhub::validate_email()
devtools::check_rhub()
devtools::release()
setwd("E:\Dropbox\Research\Travel\2020-12 AGU\presentation")
setwd("E:/Dropbox/Research/Travel/2020-12 AGU/presentation")
require(tidyverse)
urls  <- tibble::tribble(
~ url, ~ month,
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200881&cs=rgb&format=CSV&width=360&height=180", "jan",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200883&cs=rgb&format=CSV&width=360&height=180", "feb",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200882&cs=rgb&format=CSV&width=360&height=180", "mar",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200886&cs=rgb&format=CSV&width=360&height=180", "apr",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200887&cs=rgb&format=CSV&width=360&height=180", "may",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200885&cs=rgb&format=CSV&width=360&height=180", "jun",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200880&cs=rgb&format=CSV&width=360&height=180", "jul",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200879&cs=rgb&format=CSV&width=360&height=180", "aug",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200876&cs=rgb&format=CSV&width=360&height=180", "sep",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200884&cs=rgb&format=CSV&width=360&height=180", "oct",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200877&cs=rgb&format=CSV&width=360&height=180", "nov",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200878&cs=rgb&format=CSV&width=360&height=180", "dec",
)
modern <- urls %>%
mutate(dat = map(url, read_csv, na = c("99999.0", "99998.0"), col_names = 1:360 %>% as.character()))
modern_clean <- modern %>%
mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may",
"jun", "jul", "aug", "sep", "oct",
"nov", "dec"), ordered = TRUE)) %>%
unnest(dat) %>%
mutate(latitude = rep(seq(89.5, -89.5, -1), 12), period = "Modern") %>%
pivot_longer(cols = `1`:`360`, names_to = "longitude", values_to = "temperature") %>%
mutate(longitude = parse_integer(longitude) - 180.5) %>%
write_csv("out/modern_sst.csv")
modern_clean <- read_csv("out/modern_sst.csv", col_types = "cfdcdd")
# plot of all months
nearsize <- 2
modern_clean %>%
ggplot(aes(x = longitude, y = latitude, fill = temperature)) +
geom_tile() +
# this adds my site
annotate("rect", ymin = 41.61833 - nearsize, ymax = 41.61833 + nearsize, xmin = -49 - nearsize, xmax = -49 + nearsize, fill = "red") +
scale_fill_viridis_c() +
facet_wrap(vars(factor(month, levels = c("jan", "feb", "mar", "apr", "may",
"jun", "jul", "aug", "sep", "oct",
"nov", "dec"), ordered = TRUE)))
pl_mod <- modern_clean %>%
ggplot(aes(x = latitude, y = temperature)) +
## stat_summary(fun.min = ~ min(.x, na.rm = TRUE), fun.max = ~ max(.x, na.rm = TRUE), geom = "ribbon", alpha = .2) +
stat_summary(aes(fill = month),
fun.min = ~ min(.x, na.rm = TRUE),
fun.max = ~ max(.x, na.rm = TRUE),
geom = "ribbon", alpha = .1) +
stat_summary(aes(colour = month), fun = ~ mean(.x, na.rm = TRUE), geom = "line") +
stat_summary(fun = ~ mean(.x, na.rm = TRUE), geom = "line", size = 2, alpha = .4) +
scale_colour_hue(direction = -1) +
scale_fill_hue(direction = -1) +
coord_cartesian(xlim = c(-75, 75), ylim = c(-2, 35)) +
labs(x = "Latitude (°)", y = "Sea Surface Temperature (°C)", fill = "Month", colour = "Month")
pl_mod +
theme(text = element_text(size = 20), legend.pos = "right", legend.direction = "vertical")
urls  <- tibble::tribble(
~ url, ~ month,
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200881&cs=rgb&format=CSV&width=360&height=180", "jan",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200883&cs=rgb&format=CSV&width=360&height=180", "feb",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200882&cs=rgb&format=CSV&width=360&height=180", "mar",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200886&cs=rgb&format=CSV&width=360&height=180", "apr",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200887&cs=rgb&format=CSV&width=360&height=180", "may",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200885&cs=rgb&format=CSV&width=360&height=180", "jun",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200880&cs=rgb&format=CSV&width=360&height=180", "jul",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200879&cs=rgb&format=CSV&width=360&height=180", "aug",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200876&cs=rgb&format=CSV&width=360&height=180", "sep",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200884&cs=rgb&format=CSV&width=360&height=180", "oct",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200877&cs=rgb&format=CSV&width=360&height=180", "nov",
"https://neo.sci.gsfc.nasa.gov/servlet/RenderData?si=200878&cs=rgb&format=CSV&width=360&height=180", "dec",
)
modern <- urls %>%
mutate(dat = map(url, read_csv, na = c("99999.0", "99998.0"), col_names = 1:360 %>% as.character()))
modern_clean <- modern %>%
mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may",
"jun", "jul", "aug", "sep", "oct",
"nov", "dec"), ordered = TRUE)) %>%
unnest(dat) %>%
mutate(latitude = rep(seq(89.5, -89.5, -1), 12), period = "Modern") %>%
pivot_longer(cols = `1`:`360`, names_to = "longitude", values_to = "temperature") %>%
mutate(longitude = parse_integer(longitude) - 180.5) %>%
write_csv("modern_sst.csv")
modern_clean <- read_csv("modern_sst.csv", col_types = "cfdcdd")
# plot of all months
nearsize <- 2
modern_clean %>%
ggplot(aes(x = longitude, y = latitude, fill = temperature)) +
geom_tile() +
# this adds my site
annotate("rect", ymin = 41.61833 - nearsize, ymax = 41.61833 + nearsize, xmin = -49 - nearsize, xmax = -49 + nearsize, fill = "red") +
scale_fill_viridis_c() +
facet_wrap(vars(factor(month, levels = c("jan", "feb", "mar", "apr", "may",
"jun", "jul", "aug", "sep", "oct",
"nov", "dec"), ordered = TRUE)))
pl_mod <- modern_clean %>%
ggplot(aes(x = latitude, y = temperature)) +
## stat_summary(fun.min = ~ min(.x, na.rm = TRUE), fun.max = ~ max(.x, na.rm = TRUE), geom = "ribbon", alpha = .2) +
stat_summary(aes(fill = month),
fun.min = ~ min(.x, na.rm = TRUE),
fun.max = ~ max(.x, na.rm = TRUE),
geom = "ribbon", alpha = .1) +
stat_summary(aes(colour = month), fun = ~ mean(.x, na.rm = TRUE), geom = "line") +
stat_summary(fun = ~ mean(.x, na.rm = TRUE), geom = "line", size = 2, alpha = .4) +
scale_colour_hue(direction = -1) +
scale_fill_hue(direction = -1) +
coord_cartesian(xlim = c(-75, 75), ylim = c(-2, 35)) +
labs(x = "Latitude (°)", y = "Sea Surface Temperature (°C)", fill = "Month", colour = "Month")
pl_mod +
theme(text = element_text(size = 20), legend.pos = "right", legend.direction = "vertical")
setwd("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G")
raw <- read.csv("RG2_09_2011.csv")
raw <- read.csv("RG2_09_2011_raw.csv")
raw <- read.csv("RG2_09_2011_raw.csv")
setwd("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/")
raw <- read.csv("RG2_09_2011_raw.csv")
View(raw)
raw <- as.data.frame(read.csv("RG2_09_2011_raw.csv"))
raw$sample[6]
i = 19
which(raw$sample!=NULL)[1:10]
which(raw$sample!=NULL)[1:100]
which(raw$sample==NULL)[1:100]
raw$sample[6]==NULL
empty(raw$sample[6])
which(!is.null(raw$sample)[1:100]
()
which(!is.null(raw$sample))[1:100]
?is.null()
is.null(raw$sample[6])
test<-is.null(raw$sample)
test<-vapply(raw$sample,is.null,TRUE)
which(is.null(raw))
raw2<-raw2
raw2<-raw
raw2[raw=="NULL"]<-NA
View(raw2)
?is.empty
raw$sample[6]==""
raw$sample[6]
raw2[raw2==""]<_NA
raw2[raw2==""]<-NA
length(which(!is.na(raw$Sample) %in% !is.na(raw$Sa44))
)
which(!is.na(raw$Sample)
length(which(!is.na(raw$Sample) & !is.na(raw$Sa44))
)
test <- which(!is.na(raw$Sample) & !is.na(raw$Sa44))
test <- which(!is.na(raw$Sample) && !is.na(raw$Sa44))
test <- which(!is.na(raw$Sample))
is.na(raw$Sample[6])
raw[raw==""]<-NA # Remove empties
rm(raw2)
length(which(!is.na(raw$Sample) & !is.na(raw$Sa44))
)
which(!is.na(raw$Sample) & !is.na(raw$Sa44))
raw$Sample[3565]
raw&Sample[which(!is.na(raw$Sample) & !is.na(raw$Sa44))]
raw$Sample[which(!is.na(raw$Sample) & !is.na(raw$Sa44))]
name_errors <- which(!is.na(raw$Sample) & !is.na(raw$Sa44)) # Find locations where text is in raw$Sample next to values of Sa44
names(name_errors) <- raw$Sample[which(!is.na(raw$Sample) & !is.na(raw$Sa44))] # Store the values with the locations
name_errors
setwd("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/")
raw <- as.data.frame(read.csv("RG2_09_2011_raw.csv")) # Import data
# Name each row after the right sample
raw[raw==""]<-NA # Remove empties
View(raw)
name_errors <- which(!is.na(raw$Sample) & !is.na(raw$Sa44)) # Find locations where text is in raw$Sample next to values of Sa44
names(name_errors) <- raw$Sample[which(!is.na(raw$Sample) & !is.na(raw$Sa44))] # Store the values with the locations
".11" in "01.09.11"
grepl(".11","01.09.11")
grepl(".1","01.09.11")
grepl(".11",raw$Sample)
which(grepl(".11",raw$Sample))
raw$Sample[which(grepl(".11",raw$Sample))0
raw$Sample[which(grepl(".11",raw$Sample))]
dates <- which(grepl(".11",raw$Sample))
names(dates) <- raw$Sample[which(grepl(".11",raw$Sample))]
dates
which(grepl(".",dates))
length(which(grepl(".", dates)))
dates <- dates[-c(12, 14)]
dates
raw$Samples[dates]
raw$Samples[unname(dates)]
unname(dates)
raw$Sample[unname(dates)]
raw$Sample[unname(dates)] <- NA
View(raw)
test <- which(is.na(raw$Sample) & !is.na(raw$Sa44))
test[1:50]
test2 <- which(!is.na(raw$Sa44))
test[which(!is.na(raw$Sample))]
test<-[which(!is.na(raw$Sample))]
test<-which(!is.na(raw$Sample))
i = 19
test<-which(!is.na(raw$Sample) & raw$Sample < i)
test
test<-which(!is.na(raw$Sample))
test<-which(!is.na(raw$Sample) & (raw$Sample < i))
test
test<-which(!is.na(raw$Sample[raw$Sample < i]))
test
test<-which(!is.na(raw$Sample[1:i]))
test<-max(which(!is.na(raw$Sample[1:i])))
for(i in which(!is.na(raw$Sa44))){ # Loop through rows that contain data
raw$Sa44[i] <- raw$Sa44[max(which(!is.na(raw$Sample[1:i])))] # Replace sample value with name of the sample/gas
}
View(raw)
setwd("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/")
raw <- as.data.frame(read.csv("RG2_09_2011_raw.csv")) # Import data
raw[raw==""]<-NA # Remove empties
dates <- which(grepl(".11",raw$Sample)) # Isolate position of dates
names(dates) <- raw$Sample[which(grepl(".11",raw$Sample))] # Give names
dates
dates <- dates[-c(12, 14)]
dates
raw$Sample[unname(dates)] <- NA # Remove dates from dataset
for(i in which(!is.na(raw$Sa44))){ # Loop through rows that contain data
raw$Sample[i] <- raw$Sample[max(which(!is.na(raw$Sample[1:i])))] # Replace sample value with name of the sample/gas
}
unique(raw$Sample)
table(raw$Sample)
test <- raw$Sa44
test <- raw$Sa44[1:28]
test
test <- is.na(raw$Sa44)[1:28]
test
diff(test)
test <- which(diff(is.na(raw$Sa44)) == -1)
nrow(raw)
raw$measurement <- rep(NA, nrow(raw))
meas.start <- which(diff(is.na(raw$Sa44)) == -1) # Find beginnings of groups of cycles
raw$measurement <- rep(0, nrow(raw)) # Create column to name groups of cycles
for(i in meas.start){
raw$measurement[i:length(raw$measurement)] <- raw$measurement[i:length(raw$measurement)] + 1
}
View(raw)
raw$measurement[which(is.na(raw$Sa44))] <- NA
raw <- raw[, c(1, ncol(raw), 3:(ncol(raw) - 1))] # Move measurement column to second place in df
setwd("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/")
raw <- as.data.frame(read.csv("RG2_09_2011_raw.csv")) # Import data
raw[raw==""]<-NA # Remove empties
dates <- which(grepl(".11",raw$Sample)) # Isolate position of dates
names(dates) <- raw$Sample[which(grepl(".11",raw$Sample))] # Give names
# --------- MANUAL CHECK!!------------
dates <- dates[-c(12, 14)] # manual check
# --------- MANUAL CHECK!!------------
raw$Sample[unname(dates)] <- NA # Remove dates from dataset
raw$date <- rep(0, nrow(raw)) # Create column to name date of measurement
raw$date <- rep(NA, nrow(raw)) # Create column to name date of measurement
i = 5
dates[max(which(unname(dates) < i))]
for(i in which(!is.na(raw$Sa44))){ # Loop through rows that contain data
raw$Sample[i] <- raw$Sample[max(which(!is.na(raw$Sample[1:i])))] # Replace sample value with name of the sample/gas
raw$date[i] <- dates[max(which(unname(dates) < i))]
}
View(raw)
for(i in which(!is.na(raw$Sa44))){ # Loop through rows that contain data
raw$Sample[i] <- raw$Sample[max(which(!is.na(raw$Sample[1:i])))] # Replace sample value with name of the sample/gas
raw$date[i] <- names(dates[max(which(unname(dates) < i))])
}
View(raw)
raw$measurement <- rep(0, nrow(raw)) # Create column to name groups of cycles
meas.start <- which(diff(is.na(raw$Sa44)) == -1) # Find beginnings of groups of cycles
for(i in meas.start){ # Loop through batches of cycles
raw$measurement[i:length(raw$measurement)] <- raw$measurement[i:length(raw$measurement)] + 1 # Increment name of batch ("measurement")
}
raw$measurement[which(is.na(raw$Sa44))] <- NA
raw <- raw[, c(1, ncol(raw), ncol(raw) - 1, 2:(ncol(raw) - 2))]
save.image("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/RG2_09_2011.RData")
require(tidyverse)
dat <- raw
dat$R45_sample <- dat$Sa45 / dat$Sa44
View(dat)
dat$R45_sample <- dat$Sa45 / dat$Sa44
dat$R45_ref <- dat$Ref45 / dat$Ref44
dat$R46_sample <- dat$Sa46 / dat$Sa44
dat$R46_ref <- dat$Ref46 / dat$Ref44
dat$R47_sample <- dat$Sa47 / dat$Sa44
dat$R47_ref <- dat$Ref47 / dat$Ref44
dat$R48_sample <- dat$Sa48 / dat$Sa44
dat$R48_ref <- dat$Ref48 / dat$Ref44
dat$R49_sample <- dat$Sa49 / dat$Sa44
dat$R49_ref <- dat$Ref49 / dat$Ref44
dat$d45 <- dat$d46 <- dat$d47 <- dat$d48 <- dat$d49 <- rep(NA, nrow(dat))
for(i in which(!is.na(dat$Sa44))){ # Loop through rows with data
# Calculate d-values using ref measurements before and after sample
dat$d45[i] <- (dat$R45_sample[i] / ((dat$R45_Ref[i] + dat$R45_Ref[i - 1]) / 2) - 1) * 1000
dat$d46[i] <- (dat$R46_sample[i] / ((dat$R46_Ref[i] + dat$R46_Ref[i - 1]) / 2) - 1) * 1000
dat$d47[i] <- (dat$R47_sample[i] / ((dat$R47_Ref[i] + dat$R47_Ref[i - 1]) / 2) - 1) * 1000
dat$d48[i] <- (dat$R48_sample[i] / ((dat$R48_Ref[i] + dat$R48_Ref[i - 1]) / 2) - 1) * 1000
dat$d49[i] <- (dat$R49_sample[i] / ((dat$R49_Ref[i] + dat$R49_Ref[i - 1]) / 2) - 1) * 1000
}
test <- which(!is.na(dat$Sa44)
)
dat$d45 <- dat$d46 <- dat$d47 <- dat$d48 <- dat$d49 <- rep(NA, nrow(dat)) # Create empty columns
for(i in which(!is.na(dat$Sa44))){ # Loop through rows with data
# Calculate d-values using ref measurements before and after sample
dat$d45[i] <- (dat$R45_sample[i] / ((dat$R45_ref[i] + dat$R45_ref[i - 1]) / 2) - 1) * 1000
dat$d46[i] <- (dat$R46_sample[i] / ((dat$R46_ref[i] + dat$R46_ref[i - 1]) / 2) - 1) * 1000
dat$d47[i] <- (dat$R47_sample[i] / ((dat$R47_ref[i] + dat$R47_ref[i - 1]) / 2) - 1) * 1000
dat$d48[i] <- (dat$R48_sample[i] / ((dat$R48_ref[i] + dat$R48_ref[i - 1]) / 2) - 1) * 1000
dat$d49[i] <- (dat$R49_sample[i] / ((dat$R49_ref[i] + dat$R49_ref[i - 1]) / 2) - 1) * 1000
}
pars <- as.data.frame(read.csv("parameters.csv"))
pars <- as.data.frame(read.csv("parameters.csv"))
View(pars)
dat$R13_sample <- (dat$d13C / 1000 + 1) * pars$Brand[2]
dat$R18_sample <- (dat$d18O / 1000 + 1) * pars$Brand[3]
dat$R17_sample <- pars$Brand[4] * (dat$R18_sample / pars$Brand[3]) ^ pars$Brand[7]
dat$R13_sample <- (dat$d13C / 1000 + 1) * pars$Brand[1]
dat$R18_sample <- (dat$d18O / 1000 + 1) * pars$Brand[2]
dat$R17_sample <- pars$Brand[3] * (dat$R18_sample / pars$Brand[2]) ^ pars$Brand[6]
dat$R13_sample <- (dat$d13C / 1000 + 1) * pars$Brand[1]
dat$R18_sample <- (dat$d18O / 1000 + 1) * pars$Brand[2]
dat$R17_sample <- pars$Brand[3] * (dat$R18_sample / pars$Brand[2]) ^ pars$Brand[6]
dat$C12_sample <- 1 / (1 + dat$R13_sample)
dat$C13_sample <- dat$R13_sample / (1 + dat$R13_sample)
dat$O16_sample <- 1 / (1 + dat$R17_sample + dat$R18_sample)
dat$O17_sample <- dat$R17_sample / (1 + dat$R17_sample + dat$R18_sample)
dat$O18_sample <- dat$R18_sample / (1 + dat$R17_sample + dat$R18_sample)
dat$m44s_sample <- dat$C12_sample * dat$O16_sample ^ 2
dat$m45s_sample <- dat$C13_sample * dat$O16_sample ^ 2 + 2 * dat$C12_sample * dat$O16_sample * dat$O18_sample
dat$m46s_sample <- 2 * dat$C12_sample * dat$O16_sample * dat$O18_sample + dat$C12_sample * dat$O17_sample ^ 2 + 2 * dat$C13_sample * dat$O16_sample * dat$O17_sample
dat$m47s_sample <- 2 * dat$C13_sample * dat$O16_sample * dat$O18_sample + dat$C13_sample * dat$O17_sample ^ 2 + 2 * dat$C12_sample * dat$O17_sample * dat$O18_sample
dat$m48s_sample <- dat$C13_sample * dat$O17_sample * dat$O18_sample + 2 * dat$C12_sample + dat$O18_sample ^ 2
dat$m49s_sample <- dat$C13_sample * dat$O18_sample ^ 2
dat$m45s_sample <- dat$C13_sample * dat$O16_sample ^ 2 + 2 * dat$C12_sample * dat$O16_sample * dat$O17_sample
dat$m48s_sample <- 2 * dat$C13_sample * dat$O17_sample * dat$O18_sample + dat$C12_sample + dat$O18_sample ^ 2
dat$m48s_sample <- 2 * dat$C13_sample * dat$O17_sample * dat$O18_sample + dat$C12_sample * dat$O18_sample ^ 2
save.image("E:/Dropbox/Research/postdoc/UNBIAS/Clumped Temperature Calibration/Compare clumped calibrations/Wacker et al., data/25G/RG2_09_2011/RG2_09_2011.RData")
